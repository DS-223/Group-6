version: "3.9"

services:
  db:
    container_name: db
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ] # Healthcheck for PostgreSQL
      interval: 60s
      timeout: 10s
      retries: 5
    volumes:
      - ./postgres_data:/var/lib/postgresql/data #persisting data 

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
    ports:
      - 5050:80 # for local browser (80 is the default port of the browsed)
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin # Persisting pgAdmin configuration and sessions
    depends_on:
      - db

  init_db:
    build:
      context: ./Database
      dockerfile: Dockerfile
    container_name: db_initializer
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_NAME: supermarket_hot_deals_db
      DB_USER: postgres
      DB_PASSWORD: admin1234
      DB_HOST: db
      DB_PORT: 5432

  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app
    command: streamlit run app.py --server.address=0.0.0.0
    depends_on:
      - backend

  ds:
    build:
      context: ./ds
    container_name: ds
    command: jupyter notebook --notebook-dir=/app --ip=0.0.0.0 --port=8888 --no-browser --allow-root
    ports:
      - "8888:8888"
    volumes:
      - ./ds:/app
    depends_on:
      - db

volumes:
  pg_data:
